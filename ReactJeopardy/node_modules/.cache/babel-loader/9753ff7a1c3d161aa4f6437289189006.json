{"ast":null,"code":"var _jsxFileName = \"/Users/bryan/Documents/ReactJS/BC_Jeopardy_v2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DisplayQuestion from './components/DisplayQuestion';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [question, setQuestion] = useState([]);\n\n  const getData = async () => {\n    await fetch('http://jservice.io/api/random').then(response => response.json()).then(data => {\n      //console.log('data :>> ', data);\n      setQuestion(prev => {\n        return data;\n      }); // setQuestion(data)\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []); // console.log('Question here :>> ', question);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JEOPARDY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayQuestion, {\n      question: question,\n      getData: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ilupgx6klQrt2PM1+S3Jk0I3TrM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/bryan/Documents/ReactJS/BC_Jeopardy_v2/src/App.js"],"names":["React","useState","useEffect","DisplayQuestion","App","props","question","setQuestion","getData","fetch","then","response","json","data","prev","catch","err","console","log"],"mappings":";;;AAAC,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACD,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,OAAO,GAAG,YAAY;AAC3B,UAAMC,KAAK,CAAC,+BAAD,CAAL,CACFC,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGG,IAAI,IAAI;AACZ;AACAN,MAAAA,WAAW,CAAEO,IAAD,IAAU;AACpB,eAAOD,IAAP;AACD,OAFU,CAAX,CAFY,CAKZ;AACD,KARE,EASFE,KATE,CASKC,GAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAED,KAZE,CAAN;AAaA,GAdD;;AAgBFd,EAAAA,SAAS,CAAC,MAAM;AACbM,IAAAA,OAAO;AACT,GAFQ,EAEN,EAFM,CAAT,CAnBuB,CAyBvB;;AACE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEF,QAA3B;AAAqC,MAAA,OAAO,EAAEE;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;GAAMJ,G;;KAAAA,G;AAkCN,eAAeA,GAAf","sourcesContent":[" import React, {useState, useEffect} from 'react'\n import DisplayQuestion from './components/DisplayQuestion'\nimport './App.css';\n\nconst App = (props) => {\n  const [question, setQuestion] = useState([])\n\n  const getData = async () => {\n   await fetch('http://jservice.io/api/random')\n      .then(response => response.json())\n      .then(data => {\n        //console.log('data :>> ', data);\n        setQuestion((prev) => { \n          return data;\n        });\n        // setQuestion(data)\n      })\n      .catch((err)=>{\n        console.log(err)\n\n      })\n  }\n\nuseEffect(() => {\n   getData()\n}, [])\n\n\n\n// console.log('Question here :>> ', question);\n  return (\n    <div className=\"App\">\n      <h1>JEOPARDY</h1>\n      <DisplayQuestion question={question} getData={getData} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}